- name: setup masterNodes
  hosts: masterNodes
  remote_user: wuerzelchen
  gather_facts: yes
  vars:
    masterNodes_ip: "{{ hostvars[groups['masterNodes'][0]]['ansible_default_ipv4'].address | default(groups['masterNodes'][0]) }}"
    k8s_version: 1.18.0
    podSubnet: 172.16.0.0/16
    kubeadmin_config: /etc/kubernetes/admin.conf
  tasks:
  - name: Check that "{{ kubeadmin_config }}" exists
    stat:
      path: "{{ kubeadmin_config }}"
    register: k8s_initialized

  - name: generate token
    command: kubeadm token generate
    register: kubeadm_token
    run_once: true
    when: not kubeadmin_config
  - name: init cluster with kubeadm
    become: yes
    shell: |
        kubeadm \
        init \  
        --kubernetes-version {{ k8s_version }} \
        --pod-network-cidr {{ podSubnet }} \
        --token {{ kubeadm_token['stdout'] }} \
        --apiserver-advertise-address {{ masterNodes_ip }} \
    notify: init_cluster
    when: not kubeadmin_config
  - name: Create Kubernetes config directory 
    file:
      path: "~/.kube/"
      state: directory
    when: not kubeadmin_config
  handlers:
    - name: init_cluster
      become: yes
      copy:
        src: "{{ kubeadmin_config }}"
        dest: ".kube/config"
        owner: "{{ ansible_user | default(ansible_user_id) }}"
        group: "{{ ansible_user | default(ansible_user_id) }}"
        mode: 0755
        remote_src: true
      notify: kubeconf_to_local
    - name: kubeconf_to_local
      fetch:
        src: ~/.kube/config
        dest: ~/.kube/config

#- hosts: workerNodes
#  remote_user: wuerzelchen
#  gather_facts: no
#  vars:
#    masterNodes_ip: "{{ hostvars[groups['masterNodes'][0]]['ansible_default_ipv4'].address | default(groups['masterNodes'][0]) }}
#  tasks:
#    - name: Join to Kubernetes cluster
#      command: kubeadm join --token {{ token }} \
#                  --discovery-token-unsafe-skip-ca-verification \
#                  {{ masterNodes_ip }}:6443